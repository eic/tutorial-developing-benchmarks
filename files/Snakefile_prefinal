import os

from snakemake.remote.S3 import RemoteProvider as S3RemoteProvider
from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider


S3 = S3RemoteProvider(
    endpoint_url="https://dtn01.sdcc.bnl.gov:9000",
    access_key_id=os.environ["S3_ACCESS_KEY"],
    secret_access_key=os.environ["S3_SECRET_KEY"],
)


rule your_benchmark_compile:
    input:
        ROOT_BUILD_DIR_PREFIX + "benchmarks/your_benchmark/analysis/uchannelrho_cxx.so",

rule your_benchmark_campaign_reco_get:
    input:
        lambda wildcards: S3.remote(f"eictest/EPIC/RECO/24.07.0/epic_craterlake/EXCLUSIVE/UCHANNEL_RHO/10x100/rho_10x100_uChannel_Q2of0to10_hiDiv.{wildcards.INDEX}.eicrecon.tree.edm4eic.root"),
    output:
        "../../sim_output/campaign_24.07.0_rho_10x100_uChannel_Q2of0to10_hiDiv_{INDEX}_eicrecon.edm4eic.root",
    shell:
        """
echo "Getting file for INDEX {wildcards.INDEX}"
ln {input} {output}
"""


rule your_benchmark_analysis:
    input:
        script="benchmarks/your_benchmark/analysis/uchannelrho.cxx",
        #script_compiled=ROOT_BUILD_DIR_PREFIX + "benchmarks/your_benchmark/analysis/uchannelrho_cxx.so",
        data="../../sim_output/campaign_24.07.0_rho_10x100_uChannel_Q2of0to10_hiDiv_{INDEX}_eicrecon.edm4eic.root",
    output:
        plots="../../sim_output/campaign_24.07.0_{INDEX}_eicrecon.edm4eic/plots.root",
    shell:
        """
mkdir -p $(dirname "{output.plots}")
root -l -b -q '{input.script}+("{input.data}","{output.plots}")'
"""


rule your_benchmark_combine:
    input:
        #lambda wildcards: [f"../../sim_output/campaign_24.07.0_{ix:04d}_eicrecon.edm4eic/plots.root" for ix in range(int(wildcards.NUM_FILES))],
        lambda wildcards: expand(
           "../../sim_output/campaign_24.07.0_{INDEX:04d}_eicrecon.edm4eic/plots.root",
           INDEX=range(int(wildcards.N)),
        ),	
    wildcard_constraints:
        N="\d+",
    output:
        "../../sim_output/campaign_24.07.0_combined_{N}files_eicrecon.edm4eic.plots.root",
    shell:
        """
hadd {output} {input}
"""


ruleorder: your_benchmark_combine > your_benchmark_analysis


rule your_benchmark_plots:
    input:
        script="benchmarks/your_benchmark/macros/plot_rho_physics_benchmark.C",
        plots="../../sim_output/campaign_24.07.0_combined_{N}files_eicrecon.edm4eic.plots.root",
    output:
        "../../sim_output/campaign_24.07.0_combined_{N}files_eicrecon.edm4eic.plots_figures/benchmark_rho_mass.pdf",
    shell:
        """
if [ ! -d "{input.plots}_figures" ]; then
    mkdir "{input.plots}_figures"
    echo "{input.plots}_figures directory created successfully."
else
    echo "{input.plots}_figures directory already exists."
fi
root -l -b -q '{input.script}("{input.plots}")'
cat benchmark_output/*.json
"""
